파일처리와 매크로


C언어로 파일을 직접 입출력하려면
파일 포인터를 선언하고
stdio.h 헤더파일에 있는 함수로
파일을 열고 닫고 읽고 쓰고 할 수 있다.


파일 포인터 선언
FILE *fp;

파일오픈 함수와 예제
fopen(const char*, const char*)
첫번째 인자에 경로가 포함된 파일명을 적고
두번째 인자에 파일 모드(읽기, 쓰기 등)을 선언한다.

반환값 : 파일 포인터

EX)
fp = fopen("input.txt", "r");
fp포인터는 "input.txt"를 읽기 상태로 오픈하는 것을 의미하며
파일이 제대로 작동하면 fp 포인터는 파일을 작동하는 주소값을 가리킨다.


파일 모드는 텍스트 파일의 경우 "r","w","a" 등을 지원하며 텍스트 파일을 읽거나 쓰는 것이 가능하다.
          이진 파일의 경우 "rb","wb","ab"를 지원하며 각각 텍스트 파일의 "r","w","a"와 기능이 같다.


파일을 열었다면 fclose로 파일을 닫아야 한다.
FILE *fp;
⋮
fclose(fp);





파일 입출력 함수

파일에서도 printf scanf getchar putchar 등 파일 입출력 함수가 존재한다.
파일 포인터를 활용해서 파일의 값을 읽어 메인함수에 쓰거나, 반대로 원격으로 파일에 쓰는 것이 가능하다.


문자 입출력 함수 fgetc, fputc


문자열 입출력 함수 fgets, fputs

블록 입출력 함수 fread, fwrite

형식화된 입출력 함수 fprintf, fscanf (printf, scanf의 파일 버전)




파일 임의 접근 fseek함수


fgetpos , fsetpose 함




매크로



매크로 상수




매크로 함수




