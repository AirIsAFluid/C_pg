사람 a,b

연습문제 1

a : 식별자 작성 규칙에는 영문 대문자와 소문자, 언더바(_), 숫자(0~9)만 쓸 수 있고, 첫번째에 숫자가 올 수 없어
   또한 대문자와 소문자를 구분하고, 키워드(예약어)는 사용할 수 없어

b : 그럼 _number는 언더바(_)가 맨 앞에 오니 적절한 식별자야

a : define은 전처리기로 사용되는데 키워드로 분류되나?

b : 예약어에 define이 없으니 식별자 이름으로 가능할 것 같아

a : 방금 define을 변수명으로 놓고 출력해봤는데 됐어. define도 식별자 이름으로 가능해

b : 나머지는 INTI 빼고 다 식별자 이름으로 불가능한 것 같지?

a : sizeof,extern은 예약어고, -,%는 식별자 이름에 사용할 수 없어.
    그리고 숫자는 첫번째에 올 수 없어.

b : 그래서 올바른 예는 _number,define,INTI 잘못된 예는 9values,sizeof,_%_save,extern,-age야



연습문제 2-1

a : 이 문제가 원하는 건 숫자 129를 출력하는 거야

b : 그런데 오버플로우가 나서 제대로 숫자를 출력하지 못해

a : 맞아 a는 char인데 char는 127까지 밖에 표현할 수 없어
    char를 unsigned char로 바꿔 범위를 늘리는 걸 생각해 볼 수 있어.

b : char를 short로 바꿔도 되지 않아?

a : 생각 못했는데, 좋은 생각이야 마찬가지로 int나 long으로 바꿔도 범위 내에 수가 있으니 정상적으로 출력이 되겠지


연습문제 2-2

a : 이건 오버플로우가 아니라 정수형을 실수형으로 바꿔주어야 할 것 같아

b : area는 lf로 출력받으니 double을 써야 할 것 같아.

a : length와 area를 double로 선언하면 돼

b : const int 때문에 프로그램이 실행이 안돼. int형은 배웠는데 const int형은 뭐지?

a : const는 상수라는 의미고 자료형 앞에 붙어 프로그램이 끝날 때까지 값이 바뀌지 않아
    이 경우 int 앞 const를 지우거나 값을 변화시키지 않으면 돼
    따라서 int number =28;을 해주거나 number = 30;을 지우면 돼




묵시적 형변환에 관한 토론

묵시적 형변환은 컴퓨터에서 자동적으로 해주는 형변환으로
char → short → int → unsigned → long → float → double 순서로 형변환한다.


a : 왜 묵시적 형변환은 다음과 같은 방향으로 형변환할까?

b : char short int와 float double의 순서를 보면 바이트가 증가하는 방향으로 형변환하네

a : 아! 그러면 범위가 넓어지는 방향으로 형변환이 되는구나!

b : 반대방향으로 형변환하지 않는 이유는 무엇일까?

a : 만약 short에서 char로 형변환하면 오버플로우 문제를 해결하지 못하고 괜히 시간만 잡아먹을거야




예제 2 - 6


